name: Chart build and test 3.x

on:
  workflow_dispatch: {}
  # Security note: pull_request_target has elevated permissions, but we're only using it
  # for a Helm chart repo which has limited security risk
  # pull_request_target:
  #   types: [opened, synchronize, reopened, ready_for_review]
  #   paths:
  #     - 'charts/**'
  #     - '.github/workflows/test-chart.yaml'
  #     - '.github/ci-helmValues/**'

  # Uncomment this if you need to actively test this workflow from a PR draft
  # pull_request:
  #   branches:
  #     - develop

# Prevents multiple runs of the same workflow on the same branch from executing
# simultaneously. Saves resources.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      # Lint all chart values including those in the ci directory.
      - name: Run chart-testing (lint)
        run: |
          ct lint --chart-dirs=charts/finops-agent/ --charts=charts/finops-agent/ --validate-maintainers=false

      # Run `helm template` on the main values file plus all those in the ci directory.
      - name: Helm template
        run: |
          # Build dependencies first
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update
          helm dependency build charts/finops-agent/

          # Generate template output
          helm template charts/finops-agent/ -f .github/ci-helmValues/helmValues-default-test.yaml > full.yaml

          # Uncomment to test with additional values files
          # directory="charts/finops-agent/ci"
          # for file in "$directory"/*; do
          #   if [ -f "$file" ]; then
          #     echo "Templating file $file"
          #     helm template charts/finops-agent/ -f "$file" >> full.yaml
          #   fi
          # done

      # Run Kubeconform on the combined, full.yaml output across all tested values
      # Ensure all the rendered resources are valid.
      - name: Kubeconform
        uses: docker://ghcr.io/yannh/kubeconform:latest
        with:
          entrypoint: /kubeconform
          args: "-summary -ignore-missing-schemas -output text full.yaml"

  # Test cluster versions.
  deploy-chart:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        k8s-version:
          - name: v1.34
            version: v1.34.1
    needs: test-chart
    name: ${{ matrix.k8s-version.name }} test
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Create KinD cluster
        uses: helm/kind-action@v1.12.0
        with:
          node_image: kindest/node:${{ matrix.k8s-version.version }}
          kubectl_version: ${{ matrix.k8s-version.version }}

      - name: Create finops-agent namespace and test files
        run: |
          kubectl create ns finops-agent
          # kubectl -n finops-agent create -f .github/ci-files

      # Install the chart with default values and check results.
      - name: Install finops-agent chart
        working-directory: ./charts/finops-agent
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update
          helm dependency build
          helm install --wait --wait-for-jobs \
            finops-agent . \
            -n finops-agent \
            -f ../../.github/ci-helmValues/helmValues-default-test.yaml \
            --timeout 1m

      - name: Wait for ready
        run: kubectl wait -n finops-agent --for=condition=ready pod --selector app.kubernetes.io/instance=finops-agent --timeout=120s

      - name: Gather debug info - install
        if: failure()
        run: |
          echo "=== Pods in finops-agent namespace ==="
          kubectl get pods -n finops-agent
          echo "=== Pod details ==="
          kubectl get pods -n finops-agent -o yaml
          echo "=== Container images ==="
          kubectl get pods -n finops-agent -o jsonpath='{.items[*].spec.containers[*].image}'
          echo "=== Pod descriptions ==="
          kubectl -n finops-agent describe pods
          echo "=== Pod logs ==="
          kubectl -n finops-agent logs -l app.kubernetes.io/instance=finops-agent --tail=100

      - name: Run Helm tests
        run: helm test -n finops-agent finops-agent --timeout 1m

      - name: Gather debug info on failure
        if: failure()
        run: |
          echo "=== Pods in finops-agent namespace ==="
          kubectl get pods -n finops-agent
          echo "=== Pod details ==="
          kubectl get pods -n finops-agent -o yaml
          echo "=== Container images ==="
          kubectl get pods -n finops-agent -o jsonpath='{.items[*].spec.containers[*].image}'
          echo "=== Pod descriptions ==="
          kubectl -n finops-agent describe pods
          echo "=== finops-agent logs ==="
          kubectl -n finops-agent logs -l app.kubernetes.io/instance=finops-agent --tail=100

      - name: Uninstall chart
        if: always()
        run: helm uninstall finops-agent -n finops-agent --no-hooks --wait

