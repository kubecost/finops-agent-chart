---
name: PR Validation
permissions:
  contents: read

on:
  pull_request

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.1
        with:
          version: ""  # latest version

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.12.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}

  markdown-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v13
        with:
          globs: '**/*.md'
          config: '.github/linters/markdownlint.yaml'

  whitespace-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install yamllint
        run: pip install yamllint

      - name: Check YAML files with yamllint
        run: |
          yamllint -d "{extends: default, rules: {trailing-spaces: {}, document-end: {present: true}}}" charts/

      - name: Check for trailing whitespace in MD and TPL files
        run: |
          if grep -r --include="*.md" --include="*.tpl" "[[:blank:]]$" charts/; then
            echo "Error: Found trailing whitespace in .md or .tpl files"
            exit 1
          fi

      - name: Check for missing newlines in MD and TPL files
        run: |
          exit_code=0
          for file in $(find charts/ -type f -name "*.md" -o -name "*.tpl"); do
            if [ -s "$file" ] && [ "$(tail -c 1 "$file" | wc -l)" -eq 0 ]; then
              echo "Error: $file does not end with a newline"
              exit_code=1
            fi
          done
          exit $exit_code
