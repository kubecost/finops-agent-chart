{{- /*
Copyright IBM, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" .) | nindent 4 }}
    app.kubernetes.io/part-of: finops-agent
    app.kubernetes.io/component: agent
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" .) | nindent 4 }}
  {{- end }}
spec:
  # the finops agent does not support replicas
  replicas: 1
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" (dict "customLabels" $podLabels "context" .) | nindent 6 }}
      app.kubernetes.io/part-of: finops-agent
      app.kubernetes.io/component: agent
  template:
    metadata:
      annotations:
        {{- if include "finops-agent.kubecostEnabled" . }}
        checksum/federated-storage-config-secret: {{ include (print .Template.BasePath "/federated-storage-config-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.global.cspPricingApiKey.apiKey }}
        checksum/csp-pricing-api-key-secret: {{ include (print .Template.BasePath "/csp-api-key-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.agent.cloudability.enabled }}
        checksum/cloudability-secret: {{ include (print .Template.BasePath "/cloudability-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" .) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" (dict "customLabels" $podLabels "context" .) | nindent 8 }}
        app.kubernetes.io/part-of: finops-agent
        app.kubernetes.io/component: agent
    spec:
      {{- include "finops-agent.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" .) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" "finops-agent" "customLabels" $podLabels "context" .) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" "finops-agent" "customLabels" $podLabels "context" .) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" .) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "finops-agent.serviceAccountName" . }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" .) | nindent 8 }}
      {{- end }}
      containers:
        - name: finops-agent
          image: {{ include "finops-agent.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" .) | nindent 12 }}
          {{- end }}

          {{- if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" .) | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" .) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" .) | nindent 12 }}
          {{- end }}
          env:
            # TODO
            {{- with .Values.agent.collectorDataSource }}
            {{- if .enabled }}
            - name: COLLECTOR_DATA_SOURCE_ENABLED
              value: "true"
            {{- if .scrapeInterval }}
            - name: COLLECTOR_SCRAPE_INTERVAL
              value: {{ .scrapeInterval | quote }}
            {{- end }}
            {{- if .networkPort }}
            - name: NETWORK_PORT
              value: {{ .networkPort | quote }}
            {{- end }}
            {{- if .retention10m }}
            - name: COLLECTOR_RESOLUTION_10M_RETENTION
              value: {{ .retention10m | quote }}
            - name: MINUTE_METRICS_ENABLED
              value: "true"
            {{- end }}
            {{- if .retention1h }}
            - name: COLLECTOR_RESOLUTION_1H_RETENTION
              value: {{ .retention1h | quote }}
            {{- end }}
            {{- if .retention1d }}
            - name: COLLECTOR_RESOLUTION_1D_RETENTION
              value: {{ .retention1d | quote }}
            {{- end }}
            {{- end }}
            {{- end }}

            - name: CLUSTER_ID
              value: {{ (include "finops-agent.clusterId" .) | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}

            {{- if ne (include "finops-agent.cspPricingApiKeySecretName" .) "disabled" }}
            - name: CLOUD_PROVIDER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "finops-agent.cspPricingApiKeySecretName" . | trim }}
                  key: CSP_PRICING_API_KEY
            {{- end }}

            {{- if .Values.agent.exporter.emissionInterval }}
            - name: EXPORTER_EMISSION_INTERVAL
              value: {{ .Values.agent.exporter.emissionInterval | quote }}
            {{- end }}

            {{- if .Values.agent.cloudability.enabled }}
            - name: CLOUDABILITY_CLUSTER_NAME
              value: {{ (include "finops-agent.clusterId" .) | quote }}
            - name: CLOUDABILITY_EMITTER_ENABLED
              value: "true"
            - name: CLOUDABILITY_SCRATCH_DIR
              value: {{ .Values.agent.cloudability.localWorkingDir | quote }}
            - name: CLOUDABILITY_UPLOAD_REGION
              value: {{ .Values.agent.cloudability.uploadRegion | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.httpsClientTimeout }}
            - name: CLOUDABILITY_HTTPS_CLIENT_TIMEOUT
              value: {{ .Values.agent.cloudability.httpsClientTimeout | quote}}
            {{- end }}
            {{- if .Values.agent.cloudability.uploadRetryCount }}
            - name: CLOUDABILITY_UPLOAD_RETRY_COUNT
              value: {{ .Values.agent.cloudability.uploadRetryCount | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.outboundProxyInsecure }}
            - name: CLOUDABILITY_OUTBOUND_PROXY_INSECURE
              value: {{ .Values.agent.cloudability.outboundProxyInsecure | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.parseMetricData }}
            - name: CLOUDABILITY_PARSE_METRIC_DATA
              value: {{ .Values.agent.cloudability.parseMetricData | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.emissionInterval }}
            - name: CLOUDABILITY_EMISSION_INTERVAL
              value: {{ .Values.agent.cloudability.emissionInterval | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.outboundProxy }}
            - name: CLOUDABILITY_OUTBOUND_PROXY
              value: {{ .Values.agent.cloudability.outboundProxy | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.outboundProxyAuth }}
            - name: CLOUDABILITY_OUTBOUND_PROXY_AUTH
              value: {{ .Values.agent.cloudability.outboundProxyAuth | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.customS3UploadBucket }}
            - name: CLOUDABILITY_CUSTOM_S3_UPLOAD_BUCKET
              value: {{ .Values.agent.cloudability.customS3UploadBucket | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.customS3UploadRegion }}
            - name: CLOUDABILITY_CUSTOM_S3_UPLOAD_REGION
              value: {{ .Values.agent.cloudability.customS3UploadRegion | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.customAzureBlobContainerName }}
            - name: CLOUDABILITY_CUSTOM_AZURE_BLOB_CONTAINER_NAME
              value: {{ .Values.agent.cloudability.customAzureBlobContainerName | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.customAzureBlobURL }}
            - name: CLOUDABILITY_CUSTOM_AZURE_BLOB_URL
              value: {{ .Values.agent.cloudability.customAzureBlobURL | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.customAzureTenantID }}
            - name: CLOUDABILITY_CUSTOM_AZURE_BLOB_TENANT_ID
              value: {{ .Values.agent.cloudability.customAzureTenantID | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.customAzureClientID }}
            - name: CLOUDABILITY_CUSTOM_AZURE_BLOB_CLIENT_ID
              value: {{ .Values.agent.cloudability.customAzureClientID | quote }}
            {{- end }}
            {{- if .Values.agent.cloudability.keyAccessFile }}
            - name: CLOUDABILITY_KEY_ACCESS_FILEPATH
              value: "{{ .Values.agent.cloudability.pathToCloudabilitySecrets -}}/{{ .Values.agent.cloudability.keyAccessFile }}"
            {{- end }}
            {{- if .Values.agent.cloudability.keySecretFile }}
            - name: CLOUDABILITY_KEY_SECRET_FILEPATH
              value: "{{ .Values.agent.cloudability.pathToCloudabilitySecrets -}}/{{ .Values.agent.cloudability.keySecretFile }}"
            {{- end }}
            {{- if .Values.agent.cloudability.envIDFile }}
            - name: CLOUDABILITY_ENV_ID_FILEPATH
              value: "{{ .Values.agent.cloudability.pathToCloudabilitySecrets -}}/{{ .Values.agent.cloudability.envIDFile }}"
            {{- end }}
            {{- if .Values.agent.cloudability.customAzureBlobClientSecretFile }}
            - name: CLOUDABILITY_CUSTOM_AZURE_BLOB_CLIENT_SECRET_FILEPATH
              value: "{{ .Values.agent.cloudability.pathToCloudabilitySecrets -}}/{{ .Values.agent.cloudability.customAzureBlobClientSecretFile }}"
            {{- end }}
            - name: KUBECOST_EMITTER_ENABLED
            {{- if ((.Values.support).kubecostEmitterEnabled) }}
              {{- if eq .Values.support.kubecostEmitterEnabled "disabled" -}}
              value: "false"
              {{- else }}
              value: "true"
              {{- end }}
            {{- else }}
              value: {{ include "finops-agent.kubecostEnabled" . | quote }}
            {{- end }}
            - name: OPENCOST_SOURCE_ENABLED
            {{- if ((.Values.support).opencostSourceEnabled) }}
              {{- if eq .Values.support.opencostSourceEnabled "disabled" }}
              value: "false"
              {{- else }}
              value: "true"
              {{- end }}
            {{- else }}
              value: {{ include "finops-agent.kubecostEnabled" . | quote }}
            {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" .) | nindent 12 }}
            {{- end }}
          {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.extraEnvVarsSecret }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
              protocol: TCP
            {{- if .Values.extraContainerPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraContainerPorts "context" .) | nindent 12 }}
            {{- end }}

          {{- if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" .) | nindent 12 }}
          {{- else if .Values.startupProbe.enabled }}
          startupProbe: {{- omit .Values.startupProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: /healthz
              port: http
          {{- end }}
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" .) | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: /healthz
              port: http
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" .) | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: /healthz
              port: http
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- else if ne .Values.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            {{- if include "finops-agent.kubecostEnabled" . }}
            - name: federated-storage-config
              mountPath: /var/configs/federated-store.yaml
              subPath: {{ include "finops-agent.federatedStorageFileName" . | trim }}
              readOnly: true
            {{- end }}
            {{- if and .Values.agent.cloudability.enabled (include "cloudability.secret.name" .) (ne (include "cloudability.secret.name" . | trim) "") }}
            - name: cloudability-secret-store
              mountPath: {{ .Values.agent.cloudability.pathToCloudabilitySecrets}}
            {{- end }}
            {{- if ne (include "finops-agent.cspPricingApiKeySecretName" .) "disabled" }}
            - name: csp-pricing-api-key-secret
              mountPath: /opt/gcp
              readOnly: true
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - mountPath: {{ .Values.persistence.mountPath }}
              name: data
            {{- end }}
          {{- if .Values.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" .) | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.sidecars "context" .) | trim | nindent 8 }}
        {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        {{- if include "finops-agent.kubecostEnabled" . }}
        - name: federated-storage-config
          secret:
            defaultMode: 420
            secretName: {{ include "finops-agent.federatedStorageSecretName" . }}
        {{- end }}
        {{- if and (include "cloudability.secret.name" .) (ne (include "cloudability.secret.name" . | trim) "") }}
        - name: cloudability-secret-store
          secret:
            secretName: {{ include "cloudability.secret.name" . | trim }}
            defaultMode: 256
        {{- end }}
        {{- if ne (include "finops-agent.cspPricingApiKeySecretName" .) "disabled" }}
        - name: csp-pricing-api-key-secret
          secret:
            secretName: {{ include "finops-agent.cspPricingApiKeySecretName" . | trim }}
            defaultMode: 256
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" .) | nindent 8 }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ (tpl .Values.persistence.existingClaim .) | default (include "common.names.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
